package chainsaw.primitive{	import flash.utils.*;		import chainsaw.primitive.primitive;	import chainsaw.math.matrix4;	import chainsaw.geometry.geometry;	public class disc extends primitive	{		//public var _id			: 	String;		//public var _on_complete	:	Function;				public var _size		:	Number = 4;		public var _divisions	:	Number = 6;				//public var _interval	:	uint;				public function disc(on_complete_function:Function,src:String):void{//scn:scene//on_complete_function:Function						var my_paramaters 	= 	src.split(",");									_size             	= 	my_paramaters[0];			_divisions        	= 	my_paramaters[1];						_on_complete		=	on_complete_function;			_id					=	src;			//these are my geometry variables that need to be set			_rad				=	_size;						_backface_cull 		=	false;						buildobj();		}				private function buildobj():void{			var objgeo:Array	=	[0];	//split obj file at eash individual object						for(var i in objgeo){								this._obj.push( new geometry() );			//this._obj[0]    create a new geomotry, put it into an array to hold more than one				this._obj[i]._backface_cull = _backface_cull;				this._obj[i].addpoint([_x,_y,0]);				//-----------------------------------------------------go through verts				var radius 		= 	_size;				var angle_gap 	= 	(360/_divisions)*(3.14/180);//degress to radians				for(var v = 0; v <= _divisions-1; v++){					var tmp_x	= 	(_size*Math.cos(angle_gap*v)+_x);					var tmp_y	= 	(_size*Math.sin(angle_gap*v)+_y);													this._obj[i].addpoint([tmp_x,tmp_y,0]);//add point to micro geo				}				//-----------------------------------------------------go through faces				for(var f = 0; f < _divisions; f++ ){					var num_points	=	_obj[i]._pointlist.length;					var tmp_a 		= 	(f+1>=num_points)?f+2-num_points:f+1;					var tmp_b 		= 	(f+2>=num_points)?f+3-num_points:f+2;										this._obj[i].addpoly([0,tmp_a,tmp_b],"FF0000");				}				//-----------------------------------------------------				this._obj[i].find_bounding_sphere();//find the bounding sphere			}			setTimed();			//_interval 			= 	setTimeout(timedFunction, .0001);//i have to wait a moment before I can iniyialize it		}		//private function timedFunction():void{			//clearInterval(_interval)			//_on_complete();		//}	}	}