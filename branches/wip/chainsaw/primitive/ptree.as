package chainsaw.primitive{	import flash.utils.*;		import chainsaw.primitive.primitive;	import chainsaw.math.math;	import chainsaw.math.vector;	import chainsaw.math.matrix4;	import chainsaw.geometry.geometry;	public class ptree extends primitive	{		public var _main_trunk_amount:Number	= 	1;		public var _main_trunk_height:Number    = 	5;		public var _branching:Number			= 	5;		public var _branching_spread:Number		=	.05;		public var _branching_max:Number		=	20;				private var branching_count:Number		=	0;		private var branching_max:Number		=	30;						public function ptree(on_complete_function:Function,src:String):void//scn:scene//on_complete_function:Function					{			/*var my_paramaters 	= 	src.split(",");									_main_trunk_amount	= 	my_paramaters[0];			_main_trunk_height  = 	my_paramaters[1];			_branching			= 	my_paramaters[2];			_branching_spread	= 	my_paramaters[3];			_branching_max		=	my_paramaters[4];*/						_on_complete		=	on_complete_function;			_id					=	src;						_obj[0] = new geometry();						buildobj([0,0,0]);		}		private function buildobj(p:Array):void		{			_obj[0].addpoint( [p[0],p[1],p[2]] );						//--add the poly if we are more than one points in			if(branching_count>0)			{				_obj[0].addpoly( [branching_count-1,branching_count] , "" );			}			branching_count++;						//--add the next point			if( branching_count < _branching_max && branching_count < branching_max )			{				var rr = new math();				var nlength = _main_trunk_height/branching_count;								var n = new vector(	rr.random_range(-_branching_spread,_branching_spread), 1, rr.random_range(-_branching_spread,_branching_spread));								n = n.multiply_scalar(nlength);				n = n.add( _obj[0]._pointlist[branching_count-1] );								buildobj([n._x,n._y,n._z ]);			}			if( branching_count == _branching_max || branching_count == branching_max)			{				setTimed();			}			//_interval 			= 	setTimeout(timedFunction, .0001);//i have to wait a moment before I can iniyialize it		}	}}