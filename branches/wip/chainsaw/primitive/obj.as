package chainsaw.primitive{	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.Event;		import chainsaw.primitive.primitive;	import chainsaw.math.matrix4;	import chainsaw.geometry.geometry;		public class obj extends primitive	{		private var _loader	:	URLLoader;								//loader to hold loaded data					//public var _id	: 	String;		//public var _on_complete:Function;				public function obj(on_complete_function:Function,src:String):void//scn:scene//on_complete_function:Function					{			_on_complete=on_complete_function;			_id=src;			_loader 	=	new URLLoader();			_loader.addEventListener( Event.COMPLETE, parseobj );			_loader.load( new URLRequest( "obj/"+src+".obj" ) );		}				private function parseobj(evt:Event):void{			var objgeo:Array	=	_loader.data.split("# Hierarchy");	//split obj file at eash individual object			var ov:Number = 1;//start count verts so each obejcet calls the right very in poly equation			var max_rad=0;//to hold the largest radius to come through for the bounding baox						objgeo.shift();//drop the first bit			for(var i in objgeo){				var verts:Array = objgeo[i].split("\n"+"v"+" ");	//split off the vertices				verts.shift();//drop first part				var vtemp:Array = verts[verts.length-1].split("#");	//clip of extra info on last var				verts[verts.length-1]=vtemp[0];						//put clipped value back on								var faces:Array = objgeo[i].split("\n"+"f"+" ");	//split off the faces				faces.shift();				var ftemp:Array = faces[faces.length-1].split("#");				faces[faces.length-1] = ftemp[0];								this._obj.push( new geometry() );			//this._obj[0]    create a new geomotry, put it into an array to hold more than one				//-----------------------------------------------------go through verts				for(var v in verts){					var objv:Array = verts[v].split(" ");			//split at the spaces					var temp2:Array = objv[objv.length-1].split("\r");//split last value to get rid of extra info					var temp3:Array = temp2[0].split("\n");		//for the last vert take off that last new line// bug from loading in a cube, crazy head worked					objv[objv.length-1]=temp3[0];					//re assign last value without crap on end //trace(objv[0]+"    "+objv[1]+"    "+objv[2])					this._obj[i].addpoint([objv[0],objv[1],objv[2]]);//add point to micro geo				}				//-----------------------------------------------------go through faces				for(var f in faces){					var objf:Array = faces[f].split(" ");					var objfn:Array = new Array();					for(var f2=0; f2<=objf.length-2; f2++){//-2 to get rid of \r						objf[f2] = objf[f2].split("/");						objfn.push( (objf[f2][0]-ov) );//i have to subtract 1 because obj starts vert count at 1 not 0					}					this._obj[i].addpoly(objfn,"FF0000");				}				ov+=verts.length;				//-----------------------------------------------------				this._obj[i].find_bounding_sphere();//find the bounding sphere				max_rad=(_obj[i]._rad>max_rad)?_obj[i]._rad:max_rad;//give the main object the bounding sphere			}			_rad=max_rad;//set this rad			_on_complete();		}	}}