package chainsaw.math{	public class vector3{ //extends ?		//------------------------------------------------------		public var _x	:	Number;		public var _y	:	Number;		public var _z	:	Number;				public function vector4(x:Number=0,y:Number=0,z:Number=0):void{			this._x=x;			this._y=y;			this._z=z;			//trace("x:"+this._x+"	y:"+this._y+"	z:"+this._z+")		}		//------------------------------------------------------		//-------------vector math------------------------------		public function normalize(v:vector4):vector3{			var nlength:Number = Math.sqrt( (v._x*v._x) + (v._y*v._y) + (v._z*v._z) );			if(nlength == 0){//if magnitude comes back as 0 avoid dividing by 0				return new vector3 (0,0,0);			}else{				return new vector3 (v._x / nlength,v._y / nlength,v._z / nlength);			}		}		public function d_p(v1:vector3,v2:vector3):Number{			return ( v1._x * v2._x + v1._y * v2._y + v1._z * v2._z );		}		public function c_p( v1:vector3, v2:vector3 ):vector3{//cross product			return new vector3(	(v1._y * v2._z) - (v1._z * v2._y) ,								(v1._z * v2._x) - (v1._x * v2._z) ,								(v1._x * v2._y) - (v1._y * v2._x));		}		public function polynormal( p1:vector3, p2:vector3, p3:vector3 ):void{			var v1 = new vector3( (p1._x - p2._x) , (p1._y - p2._y) , (p1._z - p2._z) );			var v2 = new vector3( (p1._x - p3._x) , (p1._y - p3._y) , (p1._z - p3._z) );						var cp = c_p(v1,v2);			var norm = normalize(cp);			//var d = d_p(norm,p1);						this._x=norm._x;			this._y=norm._y;			this._z=norm._z;			//this._w=d;		}		/*public function mult_v_m4(v,m):void{			//trace("####a:"+m._n11+"	b:"+m._n12+"	c:"+m._n13+"	d:"+m._n14+"	e:"+m._n21+"	f:"+m._n22+"	g:"+m._n23+"	h:"+m._n24+"	i:"+m._n31+"	j:"+m._n32+"	k:"+m._n33+"	l:"+m._n34+"	m:"+m._n41+"	n:"+m._n42+"	o:"+m._n43+"	p:"+m._n44)			var x = m._n11 * v._x + m._n12 * v._y + m._n13 * v._z + m._n14 * v._w;			var y = m._n21 * v._x + m._n22 * v._y + m._n23 * v._z + m._n24 * v._w;			var z = m._n31 * v._x + m._n32 * v._y + m._n33* v._z + m._n34 * v._w;			var w = m._n41* v._x + m._n42* v._y + m._n43* v._z + m._n44 * v._w;			//trace("x:"+x+"	y:"+y+"	z:"+z+"	w:"+w)			this._x=x;			this._y=y;			this._z=z;			this._w=w;		}*/	}}